<UserControl x:Class="iNKORE.UI.WPF.Emojis.TabbedEmojiList"
             x:Name="UserControl_Root"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:stfu="clr-namespace:Stfu.Wpf"
             xmlns:ikw="http://schemas.inkore.net/lib/ui/wpf"
             xmlns:emoji="clr-namespace:iNKORE.UI.WPF.Emojis"
             mc:Ignorable="d" d:DesignHeight="66.775" d:DesignWidth="108" >
    <FrameworkElement.Resources>

        <BooleanToVisibilityConverter x:Key="BoolToVis"/>

        <ControlTemplate x:Key="VariationPopupTemplate" TargetType="ContentControl">
            <ListBox Name="VariationListView" ItemsSource="{Binding VariationList}"
                     Background="Transparent" BorderBrush="{x:Null}"
                     BorderThickness="0" Padding="0" Margin="0"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     MaxWidth="233">
                <!-- 6 columns -->
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <ToggleButton Style="{Binding ElementName=UserControl_Root, Path=EmojiToggleButtonStyle}" Click="OnEmojiPicked">
                                <Image Height="{Binding EmojiItemSize, ElementName=UserControl_Root}" emoji:EmojiImage.Source="{Binding Path=Text}"/>
                            </ToggleButton>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </ControlTemplate>

    </FrameworkElement.Resources>

    <TabControl ItemsSource="{Binding EmojiGroups, ElementName=UserControl_Root}">
        <TabControl.ItemTemplate>
            <DataTemplate>
                <Grid>
                    <Image Height="24" emoji:EmojiImage.Source="{Binding Icon}">
                        <Image.ToolTip>
                            <TextBlock Text="{Binding Name}"/>
                        </Image.ToolTip>
                    </Image>
                    <!--<TextBlock Text="{Binding Name}"/>-->
                </Grid>
            </DataTemplate>
        </TabControl.ItemTemplate>
        <TabControl.ContentTemplate>
            <DataTemplate>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Margin="4" Text="{Binding Name}" FontStyle="Italic"/>
                    <ListBox Name="EmojiListView" ItemsSource="{Binding EmojiList}"
                             Background="Transparent" BorderBrush="{x:Null}"
                             BorderThickness="0" Padding="0" Margin="1" Grid.Row="1"
                             VirtualizingStackPanel.IsVirtualizing="True"
                             VirtualizingStackPanel.VirtualizationMode="Recycling"
                             ScrollViewer.VerticalScrollBarVisibility="Visible"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ikw:VirtualizingWrapPanel ikw:Extensions.SmoothScrolling="True"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                 <!--Get rid of the ugly padding and margin in default ListViewItem--> 
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                 <!--Remove the mouse over highlight--> 
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <ContentPresenter/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <!-- Now for our actual content -->
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ToggleButton
                                    x:Name="VariationButton" Style="{Binding ElementName=UserControl_Root, Path=EmojiToggleButtonStyle}"
                                    Click="OnEmojiPicked" Focusable="False" ToolTip="{Binding Path=DisplayName}"
                                    IsHitTestVisible="{Binding ElementName=VariationPopup, Path=IsOpen, Mode=OneWay, Converter={stfu:BoolInverter}}">
                                    <Grid>
                                        <Image Height="{Binding EmojiItemSize, ElementName=UserControl_Root}" emoji:EmojiImage.Source="{Binding Path=Text}"
                                            VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        <!--<Polygon Visibility="{Binding HasVariations, Converter={StaticResource BoolToVis}}"
                                            Width="6" Height="6" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                            Stretch="Fill" Points="0,1 1,1 1,0" Fill="Black"/>-->
                                        <Path Visibility="{Binding HasVariations, Converter={StaticResource BoolToVis}}"
                                              Width="6" Height="6" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="1"
                                              Stretch="Uniform"  Fill="{Binding ElementName=UserControl_Root, Path=Foreground}"
                                              Data="M478.058 762.952L89.372 374.264c-18.746-18.746-18.746-49.138 0-67.882l45.334-45.334c18.714-18.714 49.044-18.75 67.802-0.08L512 569.01l309.49-308.042c18.758-18.67 49.088-18.634 67.802 0.08l45.334 45.334c18.746 18.746 18.746 49.138 0 67.882L545.942 762.952c-18.746 18.744-49.138 18.744-67.884 0z"/>
                                        <Popup x:Name="VariationPopup" StaysOpen="False" AllowsTransparency="True" Margin="0"
                                            IsOpen="{Binding IsChecked, ElementName=VariationButton, Mode=TwoWay}">
                                            <Border Style="{Binding PopupBorderStyle, ElementName=UserControl_Root}">
                                                <ContentControl Template="{StaticResource ResourceKey=VariationPopupTemplate}"/>
                                            </Border>
                                        </Popup>
                                    </Grid>
                                </ToggleButton>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ListBox>
                </Grid>
            </DataTemplate>
        </TabControl.ContentTemplate>
    </TabControl>
</UserControl>
