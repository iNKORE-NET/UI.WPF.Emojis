<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">
	<PropertyGroup>
		<OutputType>Library</OutputType>
		<TargetFrameworks>net462;net6.0-windows</TargetFrameworks>
		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
		<ApplicationIcon>..\..\assets\icons\iNKORE.ico</ApplicationIcon>
		<SignAssembly>True</SignAssembly>
		<AssemblyOriginatorKeyFile>..\..\assets\misc\iNKORE.Pulic.snk</AssemblyOriginatorKeyFile>
		<UseWPF>true</UseWPF>
		<DefaultItemExcludes>
			$(DefaultItemExcludes);gitversion.json;**\*.swp;**\*~;
			UnicodeCLDR\**;Resources\Text\UnicodeEmoji\**
		</DefaultItemExcludes>

		<!--Remove this section when https://github.com/nuget/home/issues/3891 is resolved -->
		<TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
		<AllowUnsafeBlocks>True</AllowUnsafeBlocks>
	</PropertyGroup>

	<UsingTask TaskName="GZipTask" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<InputFiles ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
			<OutDir ParameterType="System.String" Required="true" />
			<OutputFiles ParameterType="Microsoft.Build.Framework.ITaskItem[]" Output="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System.IO.Compression" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
          Directory.CreateDirectory(OutDir);
          OutputFiles = new TaskItem[InputFiles.Length];
          for (int i = 0; i < InputFiles.Length; ++i)
          {
              var input = InputFiles[i];

              // Cannot use "Filename" metadata because it drops the extension
              var outputName = Path.GetFileName(input.ItemSpec) + ".gz";
              var output = new TaskItem(Path.Combine(OutDir, outputName));

              Log.LogMessage(MessageImportance.High, $"{input.ItemSpec} -> {output.ItemSpec}");

              string inputFile = input.GetMetadata("FullPath");
              string outputFile = output.GetMetadata("FullPath");
              var data = File.ReadAllBytes(inputFile);
              using (var s = new FileStream(outputFile, FileMode.Create))
                  using (var gs = new GZipStream(s, CompressionMode.Compress, false))
                      gs.Write(data, 0, data.Length);

              // Drop the assembly prefix from the LogicalName
              output.SetMetadata("LogicalName", outputName);
              OutputFiles[i] = output;
          }
      ]]>
			</Code>
		</Task>
	</UsingTask>

	<!--<UsingTask TaskName="HLSLShaderCompile" AssemblyFile="$(PkgJeremyAnsel_HLSL_Targets)\tools\net6.0\JeremyAnsel.HLSL.Targets.dll" />-->

	<Target Name="CompressResources" BeforeTargets="BeforeBuild">
		<GZipTask InputFiles="@(LargeResources)" OutDir="$(OutputPath)">
			<Output ItemName="CompressedLargeResources" TaskParameter="OutputFiles" />
		</GZipTask>
		<ItemGroup>
			<EmbeddedResource Include="@(CompressedLargeResources)" />
			<FileWrites Include="@(CompressedLargeResources)" />
		</ItemGroup>
	</Target>

	<!--<Target Name="CompileShaders" BeforeTargets="BeforeBuild">
    <HLSLShaderCompile Source="@(EmbeddedShader)" ShaderProfile="%(EmbeddedShader.ShaderProfile)" EntryPointName="main" ObjectFileOutput="$(OutputPath)\$([System.IO.Path]::GetFileNameWithoutExtension('%(EmbeddedShader.Identity)')).ps" />
    <ItemGroup>
      <EmbeddedResource Include="%(EmbeddedShader.ObjectFileOutput)" LogicalName="$([System.IO.Path]::GetFileNameWithoutExtension('%(EmbeddedShader.Identity)')).ps" />
      <FileWrites Include="%(EmbeddedShader.ObjectFileOutput)" />
    </ItemGroup>
  </Target>-->

	<ItemGroup>
		<LargeResources Include="Resources\Text\UnicodeEmoji\emoji-test.txt" />
	</ItemGroup>

	<ItemGroup Condition="!$(DefineConstants.Contains('NET47_OR_NEWER'))">
		<PackageReference Include="System.ValueTuple" Version="4.5.0" />
	</ItemGroup>

	<ItemGroup>
		<EmbeddedResource Include="Resources\Text\WinFonts\webdings.txt" LogicalName="webdings.txt" />
		<EmbeddedResource Include="Resources\Text\WinFonts\wingdings.txt" LogicalName="wingdings.txt" />
	</ItemGroup>

	<!--<ItemGroup>
    <EmbeddedShader Include="**/*.hlsl" ShaderProfile="ps_3_0" />
  </ItemGroup>-->

	<ItemGroup>
		<None Remove="Internal\TintEffect.ps" />
	</ItemGroup>
	<ItemGroup>
		<Resource Include="Internal\TintEffect.ps" />
	</ItemGroup>
	<ItemGroup>
		<Folder Include="Helpers\" />
	</ItemGroup>

	<!--Remove this section when https://github.com/nuget/home/issues/3891 is resolved -->
	<Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
		<ItemGroup>
			<BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')-&gt;WithMetadataValue('PrivateAssets', 'All'))" />
		</ItemGroup>
	</Target>

</Project>
